<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd">

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
          p:entityManagerFactory-ref="entityManagerFactory">
    </bean>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          p:dataSource-ref="dataSource"
          p:persistenceXmlLocation="classpath*:META-INF/persistence.xml"
          p:jpaVendorAdapter-ref="jpaAdapter"
          p:persistenceUnitName="daoTapestrySpring">

        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>

        <property name="jpaPropertyMap">
            <props>
                <prop key="eclipselink.weaving">false</prop>
                <prop key="eclipselink.ddl-generation">${db.generateSchema}</prop>
            </props>
        </property>

        <property name="persistenceUnitPostProcessors">
            <list>
                <ref bean="jpaEntityScanner"/>
            </list>
        </property>
    </bean>

    <bean id="jpaEntityScanner" class="br.com.trustsystems.database.JpaEntityScanner">
        <property name="packagesToScan">
            <list>
                <value>br.com.trustsystems.entities</value>
            </list>
        </property>
    </bean>
    
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="shutdown">
        <constructor-arg ref="hikariConfig"/>
    </bean>

    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig" depends-on="dbproxy">
        <property name="dataSourceProperties">
            <props>
                <prop key="url">${db.url}</prop>
                <prop key="user">${db.user}</prop>
                <prop key="password">${db.password}</prop>
            </props>
        </property>
        <property name="dataSourceClassName" value="com.mysql.cj.jdbc.MysqlDataSource"/>
    </bean>
</beans>